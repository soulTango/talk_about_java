这是关于查找算法的，查找算法和排序算法都是很重要的基础算法，面试中也会经常考察的。2019年3月6日，
我去面试一家公司，面试官就让我手写二分查找算法，也许是没睡太醒的原因，虽然我立刻给出了算法的实现
分析，但是我当时脑抽按照排序算法去写了，导致写不下去，真是尴尬，所以我要把二分查找算法重新实现一遍。

算法思想：又叫折半查找，要求待查找的序列有序。每次取中间位置的值与待查关键字比较，如果中间位置的值比
待查关键字大，则在前半部分循环这个查找的过程，如果中间位置的值比待查关键字小，则在后半部分循环这个查
找的过程。直到查找到了为止，否则序列中没有待查的关键字。


 /*
    * 非递归
    * low 低下标
    * high 高下标
    * mid 中间下标
    * */
    public static int getIndex(int search, int[] arr){
        int low = 0;
        int high = arr.length-1;
        int mid = 0;
        while(true){
            mid = (low + high)/2;
            if(arr[mid] == search){
                return mid;
            }else if(low > high){
                return -1;
            }else {
                if(arr[mid] > search){
                    high = mid - 1;
                }else{
                    low = mid +1;
                }
            }
        }
    }
    
   /*
    * 递归
    * low 低下标
    * high 高下标
    * mid 中间下标
    * */
    public static int getIndexByDigui(int search, int[] arr, int low, int high){
        if(low <= high){
            int mid = (low + high) / 2;
            if(arr[mid] == search){
                return mid;
            }else if(arr[mid] > search){
                return getIndexByDigui(search, arr, low, mid-1);
            }else{
                return getIndexByDigui(search, arr, mid+1, high);
            }
        }
        return -1;
    }
